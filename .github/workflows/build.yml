# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
      GIT_TOKEN: ${{ secrets.TOKEN }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Java 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
    - name: Build with Gradle
      run: ./gradlew test

  release:
    #    if: ${{ github.event_name == 'push' }}
    needs: [build]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4

      # Drafts your next Release notes as Pull Requests are merged into "main"
      - name: Create release
        id: create-release
        uses: release-drafter/release-drafter@v6
        with:
          publish: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

      - name: Update version in build1.gradle
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          sed -E "s/version = '(.*)'/version = '${{ steps.create-release.outputs.tag_name }}'/g" build.gradle > build.gradle.new
          cp build.gradle.new build.gradle
          rm build.gradle.new
          git add build.gradle
          git commit -m "Updates module version to ${{ steps.create-release.outputs.tag_name }}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          release_id: ${{ steps.create-release.outputs.id }}
